name: Build Android APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Clean and Install Dependencies
      run: |
        rm -f package-lock.json
        npm install
        npm install @capacitor/core@^6.0.0 @capacitor/android@^6.0.0 @capacitor/cli@^6.0.0 terser
      
    - name: Build Web App
      run: npm run build
      
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Android Build Tools
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" "platforms;android-34"
      
    - name: Initialize Capacitor
      run: |
        npx cap init "YanSD Music" "com.yansd.music" --web-dir=dist
        
    - name: Add Android Platform
      run: npx cap add android
      
    - name: Configure Android Manifest
      run: |
        # 针对小米手机优化的Android配置
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools"
            package="com.yansd.music">

            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:supportsRtl="true"
                android:theme="@style/AppTheme"
                android:usesCleartextTraffic="true"
                android:requestLegacyExternalStorage="true"
                android:networkSecurityConfig="@xml/network_security_config"
                android:hardwareAccelerated="true"
                android:largeHeap="true"
                tools:targetApi="34">

                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:launchMode="singleTask"
                    android:theme="@style/AppTheme.NoActionBarLaunch"
                    android:screenOrientation="portrait"
                    android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|smallestScreenSize|screenLayout|uiMode">

                    <intent-filter android:autoVerify="true">
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>

                </activity>

                <!-- 小米推送服务 -->
                <meta-data
                    android:name="com.xiaomi.mipush.sdk.AppID"
                    android:value="@string/xiaomi_app_id" />
                <meta-data
                    android:name="com.xiaomi.mipush.sdk.AppKey"
                    android:value="@string/xiaomi_app_key" />

            </application>

            <!-- 基础权限 -->
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
            <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
            
            <!-- 小米手机特定权限 -->
            <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" 
                android:maxSdkVersion="28" />
            <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
            <uses-permission android:name="android.permission.WAKE_LOCK" />
            <uses-permission android:name="android.permission.VIBRATE" />
            
            <!-- 小米autostart权限 -->
            <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
            <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
            
            <!-- 音频相关权限 -->
            <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
            
            <!-- 网络状态权限，小米系统需要 -->
            <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />

            <!-- 小米手机兼容性 -->
            <uses-feature android:name="android.hardware.wifi" android:required="false" />
            <uses-feature android:name="android.hardware.audio.output" android:required="true" />

        </manifest>
        EOF
        
        # 创建网络安全配置文件（支持HTTP和HTTPS）
        mkdir -p android/app/src/main/res/xml
        cat > android/app/src/main/res/xml/network_security_config.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <network-security-config>
            <domain-config cleartextTrafficPermitted="true">
                <domain includeSubdomains="true">music-api.gdstudio.xyz</domain>
                <domain includeSubdomains="true">localhost</domain>
                <domain includeSubdomains="true">127.0.0.1</domain>
                <domain includeSubdomains="true">10.0.2.2</domain>
            </domain-config>
            <base-config cleartextTrafficPermitted="true">
                <trust-anchors>
                    <certificates src="system"/>
                    <certificates src="user"/>
                </trust-anchors>
            </base-config>
        </network-security-config>
        EOF
        
        # 添加小米推送相关的字符串资源
        mkdir -p android/app/src/main/res/values
        cat >> android/app/src/main/res/values/strings.xml << 'EOF'
        
        <!-- 小米推送配置 -->
        <string name="xiaomi_app_id">placeholder_app_id</string>
        <string name="xiaomi_app_key">placeholder_app_key</string>
        EOF
        
        # 配置gradle.properties以支持小米手机
        cat >> android/gradle.properties << 'EOF'
        
        # 小米手机优化配置
        android.useAndroidX=true
        android.enableJetifier=true
        android.enableR8.fullMode=false
        android.enableR8=true
        
        # 构建优化
        org.gradle.daemon=false
        org.gradle.configureondemand=false
        org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
        
        # 小米手机兼容性
        android.compileSdkVersion=34
        android.targetSdkVersion=34
        android.minSdkVersion=24
        EOF
      
    - name: Sync Web Assets
      run: npx cap sync android
      
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build Release APK
      run: |
        cd android
        ./gradlew clean assembleRelease --no-daemon --stacktrace
      env:
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m -Dorg.gradle.daemon=false"
        
    - name: Verify APK
      run: |
        APK_PATH="android/app/build/outputs/apk/release/app-release-unsigned.apk"
        if [ ! -f "$APK_PATH" ]; then
          echo "❌ APK file not found at $APK_PATH"
          exit 1
        fi
        
        # 检查APK文件大小
        APK_SIZE=$(stat -c%s "$APK_PATH")
        echo "📦 APK Size: $(($APK_SIZE / 1024 / 1024)) MB"
        
        if [ $APK_SIZE -lt 1000000 ]; then
          echo "⚠️ APK file seems too small, might be corrupted"
          exit 1
        fi
        
        echo "✅ APK verification passed"
        
    - name: Rename APK
      run: |
        cp android/app/build/outputs/apk/release/app-release-unsigned.apk yansd-music-v${{ github.run_number }}.apk
        
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: yansd-music-apk
        path: yansd-music-v${{ github.run_number }}.apk
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: yansd-music-v${{ github.run_number }}.apk
        generate_release_notes: true
        draft: false
        prerelease: false
        name: "YanSD Music ${{ github.ref_name }}"
        body: |
          ## YanSD Music Android APK
          
          🎵 **音乐播放器移动端应用**
          
          ### 功能特性
          - 🔍 音乐搜索
          - ▶️ 在线播放
          - 📱 移动端优化
          - 🎨 美观现代的UI
          
          ### 小米手机安装说明 📱
          
          #### 第一步：开启安装权限
          1. 进入 **设置** → **隐私保护** → **特殊应用权限** → **安装未知应用**
          2. 选择你的浏览器或文件管理器，开启"允许安装未知应用"
          
          #### 第二步：安装应用
          1. 下载 APK 文件到手机
          2. 点击APK文件进行安装
          3. 如果提示"MIUI优化"，选择"继续安装"
          
          #### 第三步：授权管理（重要）
          安装后请进行以下设置以确保应用正常运行：
          
          1. **自启动管理**：设置 → 应用设置 → 授权管理 → 自启动管理 → 开启YanSD Music
          2. **后台应用限制**：设置 → 应用设置 → 应用管理 → YanSD Music → 省电策略 → 选择"无限制"
          3. **网络权限**：设置 → 应用设置 → 应用管理 → YanSD Music → 权限 → 确保"访问网络"已开启
          4. **存储权限**：设置 → 应用设置 → 应用管理 → YanSD Music → 权限 → 开启"存储"权限
          
          ### 其他Android手机安装说明 📱
          1. 下载 APK 文件
          2. 在Android设备上开启"允许安装未知来源应用"
          3. 安装并享受音乐！
          
          ### 故障排除 🔧
          - **安装失败**：检查是否开启了"安装未知应用"权限
          - **网络连接失败**：确保已授予网络访问权限
          - **应用闪退**：检查后台应用限制和省电策略设置
          
          ### 技术信息 ℹ️
          - 构建版本: ${{ github.run_number }}
          - 构建时间: ${{ github.event.head_commit.timestamp }}
          - APK类型: 未签名版本（开发测试用）
          - 支持系统: Android 7.0+ (API 24+)
          - 特别优化: 小米MIUI系统
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
